on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.SECRET_RACO1 }}
        password: ${{ secrets.SECRET_RACO }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5.0.0
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: |
          raco21/kube-news:latest

  CD:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    needs: CI  # Indica que este job depende do job CI

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.SECRET_RACO1 }}
        password: ${{ secrets.SECRET_RACO }}

    - name: Pull Docker Image
      run: docker pull raco21/kube-news:latest

    - name: Set up Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube start --driver=docker
        minikube kubectl -- get po -A

    - name: Apply Deployment
      run: kubectl apply -f ./k8s/deployment.yaml

    - name: Wait for Pods to be Ready
      run: kubectl wait --for=condition=ready pod --all --timeout=5m

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.0  # Defina a tag da release
        release_name: Release 1.0.0  # Nome da release
        body: |  # Corpo da release
          Descrição da release aqui.
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}  # Token de acesso do GitHub
